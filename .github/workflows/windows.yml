name: Build

on:
  # push代码时触发workflow
  push:
    # 忽略README.md
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  # pull_request时触发workflow
  pull_request:
    # 忽略README.md
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    # 更新子模块
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
    # 安装Qt 版本6.1.3 wiin64_mingw81
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: "6.1.3"
          host: "windows"
          target: "desktop"
          arch: "win64_mingw81"
          dir: "${{github.workspace}}/qt/"
          install-deps: "true"

    # 生成CMake 相关文件
      - name: Configure CMake
        env:
          CMAKE_PREFIX_PATH: ${{env.Qt6_Dir}}
        run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "CodeBlocks - MinGW Makefiles" -B '${{github.workspace}}'/build
#      构建
      - name: Build
        run: cmake --build '${{github.workspace}}'/build --target CadenceLibQML
      - name: package
        if: startsWith(github.event.ref, 'refs/tags/')
        env:
          archiveName: "6.1.3-desktop-win64_mingw81"
#          archiveName: ${{ matrix.qt_ver }}-${{ matrix.qt_target }}-${{ matrix.qt_arch }}
          targetName: "CadenceLibQML.exe"
        shell: pwsh
        run: |
          # 创建文件夹
          New-Item -ItemType Directory ${env:archiveName}
          # 拷贝exe
          Copy-Item bin\${env:targetName} ${env:archiveName}\
          # 拷贝依赖
          windeployqt --qmldir . ${env:archiveName}\${env:targetName}
          # 打包zip
          Compress-Archive -Path ${env:archiveName} ${env:archiveName}'.zip'
          # 记录环境变量packageName给后续step
          $name = ${env:archiveName}
          echo "::set-env name=packageName::$name"
          # 打印环境变量packageName
          Write-Host 'packageName:'${env:packageName}